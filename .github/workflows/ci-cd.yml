name: CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check GitHub Secrets for Vercel
        run: |
          # Debug: Check if GitHub secrets are set
          echo "VERCEL_TOKEN from secrets: $([ -n "${{ secrets.VERCEL_TOKEN }}" ] && echo "YES" || echo "NO")"
          echo "VERCEL_ORG_ID from secrets: $([ -n "${{ secrets.VERCEL_ORG_ID }}" ] && echo "YES" || echo "NO")"
          echo "VERCEL_PROJECT_ID from secrets: $([ -n "${{ secrets.VERCEL_PROJECT_ID }}" ] && echo "YES" || echo "NO")"

          # Remove any existing .vercel directory to prevent conflicts
          rm -rf .vercel || true
          echo "Removed .vercel directory if it existed"

      - name: Lint
        run: yarn lint || yarn run lint

      - name: Run Unit Tests
        run: yarn test:unit || yarn run test:unit

      - name: Install system dependencies for Playwright
        run: npx playwright install-deps

      - name: Install Playwright Browsers
        run: yarn playwright install

      - name: Build
        run: yarn build

      - name: Start Next.js server
        run: yarn start &

      - name: Wait for Next.js to be ready
        run: npx wait-on http://localhost:3000

      # (Optional) Run Playwright E2E tests after server is ready
      # - name: Run E2E Tests
      #   run: yarn test:e2e

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Clean Vercel cache before deployment
        run: |
          rm -rf .vercel || true
          echo "Cleaned .vercel directory before deployment"

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
